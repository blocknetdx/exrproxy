name: build docker
on: [push]
jobs:

  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Login to DockerHub
      run: echo ${{ secrets.docker_password }} | docker login --username ${{ secrets.docker_username }} --password-stdin

    # Build images
    - name: INFO BUILD
      run: echo ${{ github.event.inputs.path }} ${{ github.event.inputs.image }} ${{ github.event.inputs.version }}
    - name: generate a Dockerfile
      run: ./ci.sh generate "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "${{ github.event.inputs.path }}"
    - name: build an image
      run: ./ci.sh build "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "*" "${{ github.event.inputs.repo }}"
    - name: Run a container
      run: ./ci.sh run "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "*" "${{ github.event.inputs.repo }}"
    - name: Test build
      run: ./ci.sh test "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "${{ github.event.inputs.path }}"
    - name: Remove a container
      run: ./ci.sh clean "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}"
    - name: Remove dangling images
      if: ${{ always() }}
      run: yes | docker image prune
    - name: Push an image to DockerHub
      run: ./ci.sh push "${{ github.event.inputs.image }}" "${{ github.event.inputs.version }}" "*" "${{ github.event.inputs.repo }}"
